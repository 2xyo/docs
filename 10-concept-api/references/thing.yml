methods:
  - method:
    common: &method-type
      title: Retrieve type
      description: Retrieves the type which the thing belongs to.
      returns:
        - "[Type](/docs/concept-api/type) object"
    java:
      <<: *method-type
      method: thing.type();
    nodejs:
      <<: *method-type
      method: async thing.type();
    python:
      <<: *method-type
      method: thing.type()
  - method:
    common: &method-relationships
      title: Retrieve relationships
      description: Retrieves the relationships which the thing plays a role in.
      accepts: &accepts-relationships
        param: &accepts-relationships-param-roles
          name: roles
          description: The list of roles to filter the relationships by.
          required: false
          default: N/A
    java:
      <<: *method-relationships
      method: thing.relationships(Role... roles);
      accepts:
        param:
          <<: *accepts-relationships-param-roles
          type: "Array of [Role](/docs/concept-api/type?lang=java#role-methods)s"
      returns:
        - "Stream of [Relationship](/docs/concept-api/thing?lang=java#relationship-methods) objects"
    nodejs:
      <<: *method-relationships
      method: async thing.relationships(roles);
      accepts:
        param:
          <<: *accepts-relationships-param-roles
          type: "Array of [Role](/docs/concept-api/type?lang=javascript#role-methods)s"
      returns:
        - "[Iterator](/docs/client-api/nodejs#client-api-title-iterator) of [Relationship](/docs/concept-api/thing?lang=javascript#relationship-methods) objects"
    python:
      <<: *method-relationships
      method: thing.relationships(roles)
      accepts:
        param:
          <<: *accepts-relationships-param-roles
          type: "List of [Role](/docs/concept-api/type?lang=python#role-methods)s"
      returns:
        - "[Iterator](/docs/client-api/python#client-api-title-iterator) of [Relationship](/docs/concept-api/thing?lang=python#relationship-methods) objects"
  - method:
    common: &method-roles
      title: Retrieve roles
      description: Retrieves the roles that the thing plays.
    java:
      <<: *method-roles
      method: thing.roles();
      returns:
        - "Stream of [Role](/docs/concept-api/type?lang=java#role-methods) objects"
    nodejs:
      <<: *method-roles
      method: async thing.roles();
      returns:
        - "[Iterator](/docs/client-api/nodejs#client-api-title-iterator) of [Role](/docs/concept-api/type?lang=javascript#role-methods) objects"
    python:
      <<: *method-roles
      method: thing.roles()
      returns:
        - "[Iterator](/docs/client-api/python#client-api-title-iterator) of [Role](/docs/concept-api/type?lang=python#role-methods) objects"
  - method:
    common: &method-attributes
      title: Retrieve attributes
      description: Retrieves the attributes that the thing has.
      accepts: &accepts-attributes
        param: &accepts-attributes-param-types
          name: roles
          description: The list of types to filter the attributes by.
          required: false
          default: N/A
    java:
      <<: *method-attributes
      method: thing.attributes();
      accepts:
        <<: *accepts-attributes
        param:
          <<: *accepts-attributes-param-types
          type: "Array of [AttributeType](/docs/concept-api/type?lang=java#attributetype-methods)s"
      returns:
        - "Stream of [Attribute](/docs/concept-api/thing?lang=java#attribute-methods) objects"
    nodejs:
      <<: *method-attributes
      method: async thing.attributes();
      accepts:
        <<: *accepts-attributes
        param:
          <<: *accepts-attributes-param-types
          type: "Array of [AttributeType](/docs/concept-api/type?lang=javascript#attributetype-methods)s"
      returns:
        - "[Iterator](...) of [Attribute](/docs/concept-api/thing?lang=javascript#attribute-methods) objects"
    python:
      <<: *method-attributes
      method: thing.attributes()
      accepts:
        <<: *accepts-attributes
        param:
          <<: *accepts-attributes-param-types
          type: "List of [AttributeType](/docs/concept-api/type?lang=pyhthon#attributetype-methods)s"
      returns:
        - "[Iterator](...) of [Attribute](/docs/concept-api/thing?lang=pyhthon#attribute-methods) objects"
  - method:
    common: &method-keys
      title: Retrieve keys
      description: Retrieves the attributes that the thing has as its keys.
      accepts: &accepts-keys
        param: &accepts-keys-param-types
          name: roles
          description: The list of types to filter the attributes by.
          required: false
          default: N/A
    java:
      <<: *method-keys
      method: thing.keys();
      accepts:
        <<: *accepts-keys
        param:
          <<: *accepts-keys-param-types
          type: "Array of [AttributeType](/docs/concept-api/type?lang=java#attributetype-methods)s"
      returns:
        - "Stream of [Attribute](/docs/concept-api/thing?lang=java#attribute-methods) objects"
    nodejs:
      <<: *method-keys
      method: async thing.keys();
      accepts:
        <<: *accepts-keys
        param:
          <<: *accepts-keys-param-types
          type: "Array of [AttributeType](/docs/concept-api/type?lang=javascript#attributetype-methods)s"
      returns:
        - "[Iterator](/docs/client-api/nodejs#client-api-title-iterator) of [Attribute](/docs/concept-api/thing?lang=javascript#attribute-methods) objects"
    python:
      <<: *method-keys
      method: thing.keys()
      accepts:
        <<: *accepts-keys
        param:
          <<: *accepts-keys-param-types
          type: "List of [AttributeType](/docs/concept-api/type?lang=python#attributetype-methods)s"
      returns:
        - "[Iterator](/docs/client-api/python#client-api-title-iterator) of [Attribute](/docs/concept-api/thing?lang=python#attribute-methods) objects"
  - method:
    common: &method-has
      title: Assign attribute
      description: Assigns an attribute to the thing.
      accepts:
        param: &accepts-has-attribute
          name: attribute
          description: The attribute to be owned by the thing.
          required: true
          default: N/A
    java:
      <<: *method-has
      method: thing.has(Attribute attribute);
      accepts:
        param:
          <<: *accepts-has-attribute
          type: "[Attribute](/docs/concept-api/thing?lang=java#attribute-methods)"
      returns:
        - "[Thing](/docs/concept-api/thing?lang=java) object"
    nodejs:
      <<: *method-has
      method: async thing.has(attribute);
      accepts:
        param:
          <<: *accepts-has-attribute
          type: "[Attribute](/docs/concept-api/thing?lang=javascript#attribute-methods)"
      returns:
        - "[Thing](/docs/concept-api/thing?lang=javascript) object"
    python:
      <<: *method-has
      method: thing.has(attribute)
      accepts:
        param:
          <<: *accepts-has-attribute
          type: "[Attribute](/docs/concept-api/thing?lang=python#attribute-methods)"
      returns:
        - "[Thing](/docs/concept-api/thing?lang=python) object"
  - method:
    common: &method-unhas
      title: Unassign attribute
      description: Unassigns an attribute from the thing.
      accepts:
        param:
          name: attribute
          description: The attribute to be disowned from the thing.
          type: "[Attribute](/docs/concept-api/thing#attribute-methods)"
          required: true
          default: N/A
    java:
      <<: *method-unhas
      method: thing.unhas(Attribute attribute);
      returns:
        - "[Thing](/docs/concept-api/thing?lang=java) object"
    nodejs:
      <<: *method-unhas
      method: async thing.unhas(attribute);
      returns:
        - "[Thing](/docs/concept-api/thing?lang=javascript) object"
    python:
      <<: *method-unhas
      method: thing.unhas(attribute)
      returns:
        - "[Thing](/docs/concept-api/thing?lang=python) object"
  - method:
    common: &method-isInferred
      title: Check if inferred
      description: Checks if the thing is inferred by a rule.
      returns:
        - boolean
    java:
      <<: *method-isInferred
      method: thing.isInferred();
    nodejs:
      <<: *method-isInferred
      method: async thing.isInferred();
    python:
      <<: *method-isInferred
      method: thing.is_inferred()