methods:
  - method:
    common: &method-label-a
      title: Retrieve label
      returns:
        - String
    java:
      <<: *method-label-a
      method: type.label();
    nodejs:
      <<: *method-label-a
      method: async type.label();
    cpython:
      <<: *method-label-a
      method: type.label()
  - method:
    common: &method-label-b
      title: Rename label
      description: Renames the label of the type. The new label must not already exist.
      accepts:
        param1:
          name: label
          description: The new label to repalce the current one
          type: String
          required: true
          default: N/A
    java:
      <<: *method-label-b
      method: type.label(Label.of(label));
      returns:
        - "[Type](/docs/concept-api/type?lang=java#type-methods) object"
    nodejs:
      <<: *method-label-b
      method: async type.label(label);
      returns:
        - "void"
    cpython:
      <<: *method-label-b
      method: type.label(label)
      returns:
        - "[Type](/docs/concept-api/type?lang=python#type-methods) object"
  - method:
    common: &method-sup-a
      title: Retrieve direct supertype
      description: Retrieves the most immidiate supertype of the type
    java:
      <<: *method-sup-a
      method: type.sup();
      returns:
        - "[Type](/docs/concept-api/type?lang=java#type-methods) object"
        - "null"
    nodejs:
      <<: *method-sup-a
      method: async type.sup();
      returns:
        - "[Type](/docs/concept-api/type?lang=javascript#type-methodsscript) object"
        - "null"
    cpython:
      <<: *method-sup-a
      method: type.sup()
      returns:
        - "[Type](/docs/concept-api/type?lang=python#type-methods) object"
        - None
  - method:
    common: &method-sup-b
      title: Change direct supertype
      description: Changes the most immidiete supertype of the type.
      accepts:
        param:
          name: type
          description: The new type that the given type inherits
          type: "[EntityType](/docs/concept-api/type#entitytype-methods) &#124; [AttributeType](/docs/concept-api/type#attributetype-methods) &#124; [RelationshipType](...)"
          required: true
          default: N/A
    java:
      <<: *method-sup-b
      method: type.sup(Type type);
      returns:
        - "[Type](/docs/concept-api/type?lang=java#type-methods) object"
        - "null"
    nodejs:
      <<: *method-sup-b
      method: async type.sup(type)
      returns:
        - void
    cpython:
      <<: *method-sup-b
      method: type.sup(type)
      returns:
        - "[Type](/docs/concept-api/type?lang=python#type-methods) object"
        - None
  - method:
    common: &method-sups
      title: Retrieve all supertypes
      description: Retrieves all supertypes of the type.
    java:
      <<: *method-sups
      method: type.sups();
      returns:
        - "Stream of [Type](/docs/concept-api/type?lang=java#type-methods) objects"
    nodejs:
      <<: *method-sups
      method: async type.sups()
      returns:
        - "[Iterator](/docs/client-api/nodejs#client-api-title-iterator) of [Type](/docs/concept-api/type?lang=java#type-methodsscript) objects"
    cpython:
      <<: *method-sups
      method: type.sups()
      returns:
        - "[Iterator](/docs/client-api/python#client-api-title-iterator) of [Type](/docs/concept-api/type?lang=python#type-methods) objects"
  - method:
    common: &method-subs
      title: Retrieve all subtypes
      description: Retrieves all subtypes of the type.
    java:
      <<: *method-subs
      method: type.subs();
      returns:
        - "Stream of [Type](/docs/concept-api/type?lang=java#type-methods) objects"
    nodejs:
      <<: *method-subs
      method: async type.subs()
      returns:
        - "[Iterator](/docs/client-api/nodejs#client-api-title-iterator) of [Type](/docs/concept-api/type#type-methods?lang=nodejs) objects"
    cpython:
      <<: *method-subs
      method: type.subs()
      returns:
        - "[Iterator](/docs/client-api/python#client-api-title-iterator) of [Type](/docs/concept-api/type?lang=python#type-methods) objects"
  - method:
    common: &method-isAbstract-a
      title: Check if type is abstract
      returns:
        - boolean
    java:
      <<: *method-isAbstract-a
      method: type.isAbstract();
    nodejs:
      <<: *method-isAbstract-a
      method: async type.isAbstract();
    cpython:
      <<: *method-isAbstract-a
      method: type.is_abstract()
  - method:
    common: &method-isAbstract-b
      title: Toggle abstraction
      description: Determines whether or not the type should be abstract.
      accepts:
        param:
          name: abstract
          description: true to be abstracted and false to not.
          type: boolean
          required: true
          default: N/A
    java:
      <<: *method-isAbstract-b
      method: type.isAbstract(Boolean abstract);
      returns:
        - "[Type](/docs/concept-api/type?lang=java#type-methods) object"
    nodejs:
      <<: *method-isAbstract-b
      method: async type.isAbstract(abstract);
      returns:
        - void
    cpython:
      <<: *method-isAbstract-b
      method: type.is_abstract(abstract)
      returns:
        - "[Type](/docs/concept-api/type?lang=python#type-methods) object"
  - method:
    common: &method-playing
      title: Retrieve roles
      description: Retrieves all roles that are allowed to be played by the type.
    java:
      <<: *method-playing
      method: type.playing();
      returns:
        - "Stream of [Role](/docs/concept-api/type?lang=java#role-methods) objectss"
    nodejs:
      <<: *method-playing
      method: async type.playing();
      returns:
        - "[Iterator](/docs/client-api/nodejs#client-api-title-iterator) of [Role](/docs/concept-api/type?lang=javascript#role-methods) objects"
    cpython:
      <<: *method-playing
      method: type.playing()
      returns:
        - "[Iterator](/docs/client-api/python#client-api-title-iterator) of [Role](/docs/concept-api/type?lang=python#role-methods) objects"
  - method:
    common: &method-plays
      title: Add new role
      description: Allows the type to play the given role.
      accepts:
        param: &accepts-plays-role
          name: role
          description: The role to be played by the type.
          required: true
          default: N/A
    java:
      <<: *method-plays
      method: type.plays(Role role);
      accepts:
        param:
          <<: *accepts-plays-role
          type: "[Role](/docs/concept-api/type?lang=java#role-methods)"
      returns:
        - "[Type](/docs/concept-api/type?lang=java#type-methods) object"
    nodejs:
      <<: *method-plays
      method: async type.plays(role);
      accepts:
        param:
          <<: *accepts-plays-role
          type: "[Role](/docs/concept-api/type?lang=javascript#role-methods)"
      returns:
        - void
    cpython:
      <<: *method-plays
      method: type.plays(role)
      accepts:
        param:
          <<: *accepts-plays-role
          type: "[Role](/docs/concept-api/type?lang=python#role-methods)"
      returns:
        - "[Type](/docs/concept-api/type?lang=python#type-methods) object"
  - method:
    common: &method-unplay
      title: Remove role
      description: Disallows the type from playing the given role.
      accepts:
        param: &accepts-unplay
          name: role
          description: The role to not be played by the type.
          required: true
          default: N/A
    java:
      <<: *method-unplay
      method: type.unplay(Role role);
      accepts:
        param:
          <<: *accepts-unplay
          type: "[Role](/docs/concept-api/type?lang=java#role-methods)"
      returns:
        - "[Type](/docs/concept-api/type?lang=java#type-methods) object"
    nodejs:
      <<: *method-unplay
      method: async type.unplay(role);
      accepts:
        param:
          <<: *accepts-unplay
          type: "[Role](/docs/concept-api/type?lang=javascript#role-methods)"
      returns:
        - void
    cpython:
      <<: *method-unplay
      method: type.unplay(role)
      accepts:
        param:
          <<: *accepts-unplay
          type: "[Role](/docs/concept-api/type?lang=python#role-methods)"
      returns:
        - "[Type](/docs/concept-api/type?lang=python#type-methods) object"
  - method:
    common: &method-attributes
      title: Retrieve attributes
      description: Retrieves attributes that the type is allowed to own.
    java:
      <<: *method-attributes
      method: type.attributes();
      returns:
        - "Stream of [AttributeType](/docs/concept-api/type?lang=java#attributetype-methods) objects"
    nodejs:
      <<: *method-attributes
      method: async type.attributes();
      returns:
        - "[Iterator](/docs/client-api/nodejs#client-api-title-iterator) of [AttributeType](/docs/concept-api/type?lang=javascript#attributetype-methods) objects"
    cpython:
      <<: *method-attributes
      method: type.attributes()
      returns:
        - "[Iterator](/docs/client-api/python#client-api-title-iterator) of [AttributeType](/docs/concept-api/type?lang=python#attributetype-methods) objects"
  - method:
    common: &method-has
      title: Add attribute
      description: Allows the type to own the given attribute.
      accepts:
        param: &accepts-has-attributeType
          description: The AttributeType to be owned by the type.
          required: true
          default: N/A
    java:
      <<: *method-has
      method: type.has(AttributeType attributeType);
      accepts:
        param:
          <<: *accepts-has-attributeType
          name: attributeType
          type: "[AttributeType](/docs/concept-api/type?lang=java#attributetype-methods)"
      returns:
        - "[Type](/docs/concept-api/type?lang=java#type-methods) object"
    nodejs:
      <<: *method-has
      method: async type.has(attributeType);
      accepts:
        param:
          <<: *accepts-has-attributeType
          name: attributeType
          type: "[AttributeType](/docs/concept-api/type?lang=javascript#attributetype-methods)"
      returns:
        - void
    cpython:
      <<: *method-has
      method: type.has(attribute_type)
      accepts:
        param:
          <<: *accepts-has-attributeType
          name: attribute_type
          type: "[AttributeType](/docs/concept-api/type?lang=python#attributetype-methods)"
      returns:
        - "[Type](/docs/concept-api/type?lang=python#type-methods) object"
  - method:
    common: &method-unhas
      title: Remove attribute
      description: Disallows the type from owning the given attributeType.
      accepts:
        param: &accepts-unhas-attributeType
          description: The AttributeType to not be owend by the type.
          required: true
          default: N/A
    java:
      <<: *method-unhas
      method: type.unhas();
      accepts:
        param:
          <<: *accepts-unhas-attributeType
          name: attributeType
          type: "[AttributeType](/docs/concept-api/type?lang=java#attributetype-methods)"
      returns:
        - "[Type](/docs/concept-api/type?lang=java#type-methods) object"
    nodejs:
      <<: *method-unhas
      method: async type.unhas();
      accepts:
        param:
          <<: *accepts-unhas-attributeType
          name: attributeType
          type: "[AttributeType](/docs/concept-api/type?lang=javascript#attributetype-methods)"
      returns:
        - void
    cpython:
      <<: *method-unhas
      method: type.unhas()
      accepts:
        param:
          <<: *accepts-unhas-attributeType
          name: attribute_type
          type: "[AttributeType](/docs/concept-api/type?lang=python#attributetype-methods)"
      returns:
        - "[Type](/docs/concept-api/type?lang=python#type-methods) object"
  - method:
    common: &method-keys
      title: Retrieve keys
      descriotion: Retrieves keys that the type is allowed to own.
    java:
      <<: *method-keys
      method: type.keys();
      returns:
        - "Stream of [AttributeType](/docs/concept-api/type?lang=java#attributetype-methods) objects"
    nodejs:
      <<: *method-keys
      method: async type.keys();
      returns:
        - "[Iterator](/docs/client-api/nodejs#client-api-title-iterator) of [AttributeType](/docs/concept-api/type?lang=javascript#attributetype-methods) objects"
    cpython:
      <<: *method-keys
      method: type.keys()
      returns:
        - "[Iterator](/docs/client-api/python#client-api-title-iterator) of [AttributeType](/docs/concept-api/type?lang=python#attributetype-methods) objects"
  - method:
    common: &method-key
      title: Add key
      description: Allows the type to own the given attributeType as its key.
      accepts:
        param: &accepts-key-key
          name: key
          description: The AttributeType to be owned by the type as its key.
          required: true
          default: N/A
    java:
      <<: *method-key
      method: type.key(AttributeType attributeType);
      accepts:
        param:
          <<: *accepts-key-key
          type: "[AttributeType](/docs/concept-api/type?lang=java#attributetype-methods)"
      returns:
        - "[Type](/docs/concept-api/type#type-methods?lang=) object"
    nodejs:
      <<: *method-key
      method: async type.key(attributeType);
      accepts:
        param:
          <<: *accepts-key-key
          type: "[AttributeType](/docs/concept-api/type?lang=javascript#attributetype-methods)"
      returns:
        - void
    cpython:
      <<: *method-key
      method: type.key(attributeType)
      accepts:
        param:
          <<: *accepts-key-key
          type: "[AttributeType](/docs/concept-api/type?lang=python#attributetype-methods)"
      returns:
        - "[Type](/docs/concept-api/type#type-methods?lang=) object"
  - method:
    common: &method-unkey
      title: Remove key
      description: Disallows the type from owning the given attributeType as its key.
      accepts:
        param: &accepts-unkey-attributeType
          description: the AttributeType to not be owend by the type as its key.
          required: true
          default: N/A
      returns:
        - "[Type](/docs/concept-api/type#type-methods?lang=) object"
    java:
      <<: *method-unkey
      method: type.unkey(AttributeType key);
      accepts:
        param:
          <<: *accepts-unkey-attributeType
          name: attributeType
          type: "[AttributeType](/docs/concept-api/type?lang=java#attributetype-methods)"
      returns:
        - "[Type](/docs/concept-api/type?lang=java#type-methods) object"
    nodejs:
      <<: *method-unkey
      method: async type.unkey(attributeType);
      accepts:
        param:
          <<: *accepts-unkey-attributeType
          name: attributeType
          type: "[AttributeType](/docs/concept-api/type?lang=javascript#attributetype-methods)"
      returns:
        - void
    cpython:
      <<: *method-unkey
      method: type.unkey(attribute_type)
      accepts:
        param:
          <<: *accepts-unkey-attributeType
          name: attribute_type
          type: "[AttributeType](/docs/concept-api/type?lang=python#attributetype-methods)"
      returns:
        - "[Type](/docs/concept-api/type?lang=python#type-methods) object"
  - method:
    common: &method-instances
      title: Retrieve instances
    java:
      <<: *method-instances
      method: type.instances();
      returns:
        - "Stream of [Thing](/docs/concept-api/thing?lang=java) object"
    nodejs:
      <<: *method-instances
      method: async type.instances();
      returns:
        - "[Iterator](/docs/client-api/python#client-api-title-iterator) of [Thing](/docs/concept-api/thing?lang=javascript) object"
    cpython:
      <<: *method-instances
      method: type.instances()
      returns:
        - "[Iterator](/docs/client-api/python#client-api-title-iterator) of [Thing](/docs/concept-api/thing?lang=python) object"